<div class="max-w-4xl mx-auto px-4 py-6">
  <div class="bg-white rounded-lg shadow-md">
    <!-- Header -->
    <div class="px-6 py-4 border-b border-gray-200">
      <nav class="flex" aria-label="Breadcrumb">
        <ol class="inline-flex items-center space-x-1 md:space-x-3">
          <li class="inline-flex items-center">
            <%= link_to admin_face_enrollment_index_path, class: "text-blue-600 hover:text-blue-900" do %>
              <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                <path d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L9 5.414V17a1 1 0 102 0V5.414l5.293 5.293a1 1 0 001.414-1.414l-7-7z"></path>
              </svg>
              Face Enrollment
            <% end %>
          </li>
          <li>
            <div class="flex items-center">
              <svg class="w-6 h-6 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
              </svg>
              <span class="ml-1 text-sm font-medium text-gray-500"><%= @employee.name %></span>
            </div>
          </li>
        </ol>
      </nav>
    </div>

    <!-- Employee Info -->
    <div class="px-6 py-4 bg-gray-50">
      <div class="flex items-center justify-between">
        <div class="flex items-center">
          <div class="flex-shrink-0 h-12 w-12">
            <div class="h-12 w-12 rounded-full bg-gray-300 flex items-center justify-center">
              <svg class="h-8 w-8 text-gray-600" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd"></path>
              </svg>
            </div>
          </div>
          <div class="ml-4">
            <h1 class="text-xl font-bold text-gray-900"><%= @employee.name %></h1>
            <p class="text-sm text-gray-600">ID: <%= @employee.employee_id %> • <%= @employee.branch.name %></p>
          </div>
        </div>
        <div class="text-right">
          <% if @enrollment_status == 'enrolled' %>
            <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-green-100 text-green-800">
              <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
              </svg>
              Face Enrolled
            </span>
          <% else %>
            <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-gray-100 text-gray-800">
              <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>
              </svg>
              Not Enrolled
            </span>
          <% end %>
        </div>
      </div>
    </div>

    <!-- Main Content -->
    <div class="px-6 py-6">
      <% if @enrollment_status == 'enrolled' %>
        <!-- Already Enrolled -->
        <div class="text-center py-8">
          <div class="mx-auto h-16 w-16 rounded-full bg-green-100 flex items-center justify-center mb-4">
            <svg class="h-8 w-8 text-green-600" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
            </svg>
          </div>
          <h3 class="text-lg font-medium text-gray-900 mb-2">Face Successfully Enrolled</h3>
          <p class="text-gray-600 mb-6">This employee can now use face verification for secure clock-in.</p>
          
          <%= link_to admin_face_enrollment_path(@employee), 
              method: :delete,
              class: "inline-flex items-center px-4 py-2 border border-red-300 rounded-md text-sm font-medium text-red-700 bg-white hover:bg-red-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500",
              confirm: "Are you sure you want to remove this employee's face enrollment? They will need to re-enroll to use face verification." do %>
            <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M9 2a1 1 0 000 2h2a1 1 0 100-2H9z" clip-rule="evenodd"></path>
              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8 7a1 1 0 012 0v4a1 1 0 11-2 0V7zM8 13a1 1 0 112 0 1 1 0 01-2 0z" clip-rule="evenodd"></path>
            </svg>
            Remove Face Enrollment
          <% end %>
        </div>
      <% else %>
        <!-- Face Enrollment Interface -->
        <div class="text-center mb-6">
          <h2 class="text-lg font-medium text-gray-900 mb-2">Enroll Employee Face</h2>
          <p class="text-gray-600">Take a clear photo to enable face verification for secure clock-in.</p>
        </div>

        <!-- Camera Interface -->
        <div class="max-w-md mx-auto">
          <div id="camera-container" class="hidden">
            <div class="bg-gray-100 rounded-lg p-4 mb-4">
              <video id="camera-preview" class="w-full rounded-lg" autoplay playsinline></video>
            </div>
            <div class="flex justify-center space-x-4 mb-4">
              <button id="capture-photo" class="px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500">
                Take Photo
              </button>
              <button id="cancel-camera" class="px-6 py-2 bg-gray-300 text-gray-700 rounded-lg hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500">
                Cancel
              </button>
            </div>
          </div>

          <div id="photo-preview" class="hidden">
            <div class="bg-gray-100 rounded-lg p-4 mb-4">
              <img id="captured-photo" class="w-full rounded-lg" alt="Captured photo">
            </div>
            <div class="flex justify-center space-x-4 mb-4">
              <button id="confirm-enrollment" class="px-6 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500">
                Confirm Enrollment
              </button>
              <button id="retake-photo" class="px-6 py-2 bg-gray-300 text-gray-700 rounded-lg hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500">
                Retake Photo
              </button>
            </div>
          </div>

          <div id="initial-state">
            <div class="bg-gray-100 rounded-lg p-8 mb-4 text-center">
              <svg class="mx-auto h-12 w-12 text-gray-400 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z" />
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 13a3 3 0 11-6 0 3 3 0 016 0z" />
              </svg>
              <p class="text-gray-600 mb-4">Ready to capture photo for face enrollment</p>
            </div>
            <button id="start-camera" class="w-full px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 text-lg font-medium">
              Start Camera
            </button>
          </div>

          <!-- Processing State -->
          <div id="processing-state" class="hidden text-center">
            <div class="bg-blue-50 rounded-lg p-8 mb-4">
              <div class="animate-spin mx-auto h-12 w-12 mb-4">
                <svg class="h-12 w-12 text-blue-600" fill="none" viewBox="0 0 24 24">
                  <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                  <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
              </div>
              <p class="text-blue-800 font-medium">Processing face enrollment...</p>
              <p class="text-blue-600 text-sm mt-1">Please wait while we verify the photo quality</p>
            </div>
          </div>

          <!-- Guidelines -->
          <div class="mt-6 bg-blue-50 rounded-lg p-4">
            <h4 class="text-sm font-medium text-blue-900 mb-2">Photo Guidelines:</h4>
            <ul class="text-sm text-blue-800 space-y-1">
              <li>• Look directly at the camera</li>
              <li>• Ensure good lighting on your face</li>
              <li>• Remove hats, sunglasses, or masks</li>
              <li>• Keep a neutral expression</li>
              <li>• Position face clearly in frame</li>
            </ul>
          </div>
        </div>
      <% end %>
    </div>
  </div>
</div>

<%= content_for :javascript do %>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const startCameraBtn = document.getElementById('start-camera');
      const capturePhotoBtn = document.getElementById('capture-photo');
      const confirmEnrollmentBtn = document.getElementById('confirm-enrollment');
      const retakePhotoBtn = document.getElementById('retake-photo');
      const cancelCameraBtn = document.getElementById('cancel-camera');
      
      const initialState = document.getElementById('initial-state');
      const cameraContainer = document.getElementById('camera-container');
      const photoPreview = document.getElementById('photo-preview');
      const processingState = document.getElementById('processing-state');
      
      const cameraPreview = document.getElementById('camera-preview');
      const capturedPhoto = document.getElementById('captured-photo');
      
      let stream = null;
      let capturedImageData = null;

      // Start Camera
      startCameraBtn.addEventListener('click', async function() {
        try {
          stream = await navigator.mediaDevices.getUserMedia({ 
            video: { facingMode: 'user' },
            audio: false 
          });
          cameraPreview.srcObject = stream;
          
          initialState.classList.add('hidden');
          cameraContainer.classList.remove('hidden');
        } catch (error) {
          alert('Camera access denied. Please allow camera permissions and try again.');
        }
      });

      // Capture Photo
      capturePhotoBtn.addEventListener('click', function() {
        const canvas = document.createElement('canvas');
        const context = canvas.getContext('2d');
        
        canvas.width = cameraPreview.videoWidth;
        canvas.height = cameraPreview.videoHeight;
        context.drawImage(cameraPreview, 0, 0);
        
        capturedImageData = canvas.toDataURL('image/jpeg', 0.8);
        capturedPhoto.src = capturedImageData;
        
        // Stop camera
        if (stream) {
          stream.getTracks().forEach(track => track.stop());
        }
        
        cameraContainer.classList.add('hidden');
        photoPreview.classList.remove('hidden');
      });

      // Confirm Enrollment
      confirmEnrollmentBtn.addEventListener('click', async function() {
        if (!capturedImageData) return;
        
        photoPreview.classList.add('hidden');
        processingState.classList.remove('hidden');
        
        try {
          const formData = new FormData();
          formData.append('selfie_data', capturedImageData);
          formData.append('authenticity_token', document.querySelector('[name="csrf-token"]').content);
          
          const response = await fetch('<%= enroll_admin_face_enrollment_path(@employee) %>', {
            method: 'POST',
            body: formData
          });
          
          const result = await response.json();
          
          if (result.success) {
            window.location.reload();
          } else {
            processingState.classList.add('hidden');
            photoPreview.classList.remove('hidden');
            alert('Enrollment failed: ' + (result.error || 'Please try again'));
          }
        } catch (error) {
          processingState.classList.add('hidden');
          photoPreview.classList.remove('hidden');
          alert('Network error. Please try again.');
        }
      });

      // Retake Photo
      retakePhotoBtn.addEventListener('click', function() {
        photoPreview.classList.add('hidden');
        initialState.classList.remove('hidden');
      });

      // Cancel Camera
      cancelCameraBtn.addEventListener('click', function() {
        if (stream) {
          stream.getTracks().forEach(track => track.stop());
        }
        cameraContainer.classList.add('hidden');
        initialState.classList.remove('hidden');
      });
    });
  </script>
<% end %>